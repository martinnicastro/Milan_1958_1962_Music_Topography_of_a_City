#pal = palette_venues,
#values = venues_data$Eventi,
#title = "Events:",
#labFormat = labelFormat(suffix = " "),
#opacity = 1,
#group = "Events") %>%
##Legend capacity
#addLegend("bottomleft",
#pal = palette_capacity,
#values = venues_data$Eventi,
#title = "Capacity:",
#labFormat = labelFormat(suffix = " "),
#opacity = 1,
#group = "Capacity") %>%
##Heatmap
addHeatmap(data = performers_data,
lng = ~Longitude,
lat = ~Latitude,
group = "Heatmap",
minOpacity = 0.05,
max = 1,
radius = 15,
blur = 15,
intensity = 0.6,
cellSize = 5,
) %>%
##Legend jazz
addLegend("bottomright",
pal = palette_jazz,
values = jazz_data$category,
title = "Jazz performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Jazz performers") %>%
##Legend canzone
addLegend("bottomright",
pal = palette_canzone,
values = canzone_data$CATEGORY,
title = "Song performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Song performers") %>%
##Legend eurocolta
addLegend("bottomleft",
pal = palette_eurocolta,
values = eurocolta_data$CATEGORY,
title = "Classical performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Classical performers") %>%
##Legend scenica
addLegend("bottomleft",
pal = palette_scenica,
values = scenica_data$CATEGORY,
title = "Theatre performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Theatre performers") %>%
##Legend opera
addLegend("bottomleft",
pal = palette_opera,
values = opera_data$CATEGORY,
title = "Opera performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Opera performers") %>%
##Legend popolare
addLegend("bottomright",
pal = palette_popolare,
values = popolare_data$CATEGORY,
title = "Folk performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Folk performers") %>%
##addMinicharts(
#cerchie_charts_data$Latitude,
#cerchie_charts_data$Longitude,
#chartdata = select(cerchie_charts_data, Teatri, Night, Cinema, Whisky, Dancing),
#colorPalette = palette__cerchie_charts,
#group = "Cerchie",
#width = 45,
#height = 45
#)  %>%
## Add a legend with the credits
## Add a legend with the credits
addLegend("topright",
colors = c("trasparent"),
labels=c("Milan 1958-1962: Music Topography of a City")) %>%
addLegend("topright",
colors = c("trasparent"),
labels=c("Performers Mobility Map - nicastromartin@gmail.com")) %>%
addLegend("topright",
colors = c("trasparent"),
labels=c("Realized with the support of Small Grants AIUCD 2022")) %>%
## PART 3 - IN THIS PART THE CODE MANAGE THE LAYERS' SELECTOR
## Add the layer selector which allows you to navigate the possibilities offered by this map
addLayersControl(baseGroups = c("1965",
"Empty layer"),
overlayGroups = c( "Venues",
"Heatmap",
"Performers",
"Jazz performers",
"Song performers",
"Classical performers",
"Opera performers",
"Theatre performers",
"Folk performers"),
options = layersControlOptions(collapsed = TRUE)) %>%
## Hide the layers that the users can choose as they like
hideGroup(c("Teatri",
"Night Club",
"Cinema",
"Dancing",
"Whisky a go-go",
"Heatmap",
"Jazz performers",
"Song performers",
"Classical performers",
"Opera performers",
"Theatre performers",
"Folk performers"
))
## Show the map
m
##install.packages("leaflet")
##install.packages("sp")
##install.packages("rgdal")
##install.packages("RColorBrewer")
##install.packages("leaflet.extras")
##install.packages("leaflet.minicharts")
##install.packages("htmlwidgets")
##install.packages("raster")
##install.packages("mapview")
##install.packages("leafem")
## Call the libraries
library(leaflet)
library(sp)
library(rgdal)
library(RColorBrewer)
library(leaflet.extras)
library(leaflet.minicharts)
library(htmlwidgets)
library(raster)
library(mapview)
library(leafem)
library(leafpop)
library(sf)
library(htmltools)
library(magrittr)
## PART 1 - IN THIS PART THE CODE READS THE FILES AND ATTRIBUTES COLORS AND ICONS TO ELEMENTS
#WMS raster 1965
wms_1965 <- "https://geoportale.comune.milano.it/arcgis/services/Cartografie_Raster/Milano_1965_JPG_CTC_GB/ImageServer/WMSServer"
## Shapefile night club
Night_Club <- st_read('data/Night_Club/Night_Club.shp')
## Shapefile cinema
Cinema <- st_read('data/Cinema/Cinema.shp')
## Shapefile teatri
Teatri <- st_read('data/Teatri/Teatri.shp')
## Shapefile whisky
Whisky <- st_read('data/Whisky/Whisky.shp')
## Shapefile dancing
Dancing <- st_read('data/Dancing/Dancing.shp')
## Shapefile cerchie
Cerchie <- readOGR('data/Cerchie/cerchie.shp')
## Palette cerchie
palette_cerchie <- colorFactor(palette = c("yellow", "#F22814", "#14F297"), domain = Cerchie$nome)
## Palette night club
palette_night_club <- colorFactor(palette = c("#f9a515"), domain = Night_Club$tipologia)
## Palette cinema
palette_cinema <- colorFactor(palette = c("green"), domain = Cinema$tipologia)
## Palette teatri
palette_teatri <- colorFactor(palette = c("#fd0090", "#0090fd","#0012fd", "#fd0012",  "#900C3F" ),  domain = Teatri$tipologia)
## Palette whisky
palette_whisky <- colorFactor(palette = c("darkorchid"), domain = Whisky$tipologia)
## Palette dancing
palette_dancing <- colorFactor(palette = c("#f9ef15"), domain = Dancing$tipologia)
## Shapefile Jazz
jazz_data <- st_read('data/Jazz/jazz.shp')
## Palette Jazz
palette_jazz <- colorFactor(c("#be7625","#256dbe"), domain = jazz_data$category)
## Shapefile canzone
canzone_data <- st_read('data/Canzone/canzone.shp')
## Palette canzone
palette_canzone <- colorFactor(c("#25be29","#be25ba","#be2555","#25be8e","#E68D1C", "#ff1a1f", "#1afffa"), domain = canzone_data$CATEGORY)
## Shapefile eurocolta
eurocolta_data <- st_read('data/Eurocolta/eurocolta.shp')
## Palette eurocolta
palette_eurocolta <- colorFactor(c("#10e426","#e45010","#e4104f","#10a4e4"), domain = eurocolta_data$CATEGORY)
## Shapefile scenica
scenica_data <- st_read('data/Scenica/scenica.shp')
## Palette scenica
palette_scenica <- colorFactor(c("#faff00","#e47410","#0e8f0a","#8b0a8f"), domain = scenica_data$CATEGORY)
## Shapefile opera
opera_data <- st_read('data/Opera_ball/opera_ball.shp')
## Palette opera
palette_opera <- colorFactor(c("#7310e4","#3a0406","#8f0a0e","#e41017", "#c1e410"), domain = opera_data$CATEGORY)
## Shapefile popolare
popolare_data <- st_read('data/Popolare/popolare.shp')
## Palette popolare
palette_popolare <- colorFactor(c("#000000"), domain = popolare_data$CATEGORY)
##performers csv
performers_data <- read.csv("data/performers.csv")
##performers popup
content_performers <- paste(sep = "<br/>",
paste0("<div class='leaflet-popup-scrolled' style='max-width:200px;max-height:100px'>"),
paste0(performers_data$Nome),
paste0("</div>"))
##teatri icons
performers_icons <- makeAwesomeIcon(icon = 'user', markerColor = 'blue')
## PART 2 - IN THIS PART THE CODE ADDS ELEMENT ON THE MAP LIKE POLYGONS, POINTS AND IMAGES.
m <- leaflet(options = leafletOptions(preferCanvas = TRUE)) %>%
## Basemap
##addTiles(tile)        %>%
addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(
updateWhenZooming = FALSE,
updateWhenIdle = TRUE)      )  %>%
## Add a zoom reset button
addResetMapButton() %>%
## Add a coordinates reader
leafem::addMouseCoordinates() %>%
## define the view
setView(lng = 1.4625,
lat = 41.24477,
zoom = 2
) %>%
##WMS 1965
addWMSTiles(
wms_1965,
layers = "0",
group  = "1965",
options = WMSTileOptions(format = "image/png", transparent = FALSE)
)%>%
## Edges jazz
addPolylines(data = jazz_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_jazz(category),
weight = 1.5,
group = "Jazz performers",
label = ~paste(category)) %>%
## Edges canzone
addPolylines(data = canzone_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_canzone(CATEGORY),
weight = 1.5,
group = "Song performers",
label = ~paste(CATEGORY)) %>%
## Edges eurocolta
addPolylines(data = eurocolta_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_eurocolta(CATEGORY),
weight = 1.5,
group = "Classical performers",
label = ~paste(CATEGORY)) %>%
## Edges scenica
addPolylines(data = scenica_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_scenica(CATEGORY),
weight = 1.5,
group = "Theatre performers",
label = ~paste(CATEGORY)) %>%
## Edges opera
addPolylines(data = opera_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_opera(CATEGORY),
weight = 1.5,
group = "Opera performers",
label = ~paste(CATEGORY)) %>%
## Edges opera
addPolylines(data = popolare_data,
stroke = TRUE,
smoothFactor = 0.2,
fillOpacity = NULL,
color = ~palette_popolare(CATEGORY),
weight = 1.5,
group = "Folk performers",
label = ~paste(CATEGORY)) %>%
## Markers performers
addAwesomeMarkers(data = performers_data,
lng = ~Longitude,
lat = ~Latitude,
label = ~Nome,
icon = performers_icons,
group = "Performers",
clusterOptions = markerClusterOptions())%>%
##Polygons cinema_2
addPolygons(data = Cinema,
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
color = ~palette_cinema(tipologia),
group = "Venues",
label = ~paste(nome)) %>%
##Polygons teatri_2
addPolygons(data = Teatri,
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
color = ~palette_teatri(tipologia),
group = "Venues",
label = ~paste(nome)) %>%
##Polygons whisky_2
addPolygons(data = Whisky,
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
color = ~palette_whisky(tipologia),
group = "Venues",
label = ~paste(nome)) %>%
##Polygons dancing_2
addPolygons(data = Dancing,
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
color = ~palette_dancing(tipologia),
group = "Venues",
label = ~paste(nome)) %>%
##Polygons Night_2
addPolygons(data = Night_Club,
stroke = FALSE,
smoothFactor = 0.2,
fillOpacity = 1,
color = ~palette_night_club(tipologia),
group = "Venues",
label = ~paste(nome)) %>%
##Polygons Cerchie
addPolygons(data = Cerchie,
weight = 1,
opacity = 1,
stroke = TRUE,
fillColor = "red",
smoothFactor = 0.2,
fillOpacity = 0,
color = ~palette_cerchie(nome),
group = "Cerchie"
) %>%
##Legend nights
addLegend("bottomleft",
pal = palette_night_club,
values = Night_Club$tipologia,
title = "Night Club:",
labFormat = labelFormat(suffix = ""),
opacity = 1,
group = "Venues") %>%
##Legend teatri
addLegend("bottomleft",
pal = palette_teatri,
values = Teatri$tipologia,
title = "Teatri:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Venues") %>%
##Legend cinema
addLegend("bottomleft",
pal = palette_cinema,
values = Cinema$tipologia,
title = "Cinema:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Venues") %>%
##Legend whisky
addLegend("bottomleft",
pal = palette_whisky,
values = Whisky$tipologia,
title = "Whisky a go-go:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Venues") %>%
##Legend dancing
addLegend("bottomleft",
pal = palette_dancing,
values = Dancing$tipologia,
title = "Dancing:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Venues") %>%
##Legend events
#addLegend("bottomleft",
#pal = palette_venues,
#values = venues_data$Eventi,
#title = "Events:",
#labFormat = labelFormat(suffix = " "),
#opacity = 1,
#group = "Events") %>%
##Legend capacity
#addLegend("bottomleft",
#pal = palette_capacity,
#values = venues_data$Eventi,
#title = "Capacity:",
#labFormat = labelFormat(suffix = " "),
#opacity = 1,
#group = "Capacity") %>%
##Heatmap
addHeatmap(data = performers_data,
lng = ~Longitude,
lat = ~Latitude,
group = "Heatmap",
minOpacity = 0.05,
max = 1,
radius = 15,
blur = 15,
intensity = 0.6,
cellSize = 5,
) %>%
##Legend jazz
addLegend("bottomright",
pal = palette_jazz,
values = jazz_data$category,
title = "Jazz performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Jazz performers") %>%
##Legend canzone
addLegend("bottomright",
pal = palette_canzone,
values = canzone_data$CATEGORY,
title = "Song performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Song performers") %>%
##Legend eurocolta
addLegend("bottomleft",
pal = palette_eurocolta,
values = eurocolta_data$CATEGORY,
title = "Classical performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Classical performers") %>%
##Legend scenica
addLegend("bottomleft",
pal = palette_scenica,
values = scenica_data$CATEGORY,
title = "Theatre performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Theatre performers") %>%
##Legend opera
addLegend("bottomleft",
pal = palette_opera,
values = opera_data$CATEGORY,
title = "Opera performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Opera performers") %>%
##Legend popolare
addLegend("bottomright",
pal = palette_popolare,
values = popolare_data$CATEGORY,
title = "Folk performers:",
labFormat = labelFormat(suffix = " "),
opacity = 1,
group = "Folk performers") %>%
##addMinicharts(
#cerchie_charts_data$Latitude,
#cerchie_charts_data$Longitude,
#chartdata = select(cerchie_charts_data, Teatri, Night, Cinema, Whisky, Dancing),
#colorPalette = palette__cerchie_charts,
#group = "Cerchie",
#width = 45,
#height = 45
#)  %>%
## Add a legend with the credits
## Add a legend with the credits
addLegend("topright",
colors = c("trasparent"),
labels=c("Milan 1958-1962: Music Topography of a City")) %>%
addLegend("topright",
colors = c("trasparent"),
labels=c("Performers Mobility Map - nicastromartin@gmail.com")) %>%
addLegend("topright",
colors = c("trasparent"),
labels=c("Realized with the support of Small Grants AIUCD 2022")) %>%
## PART 3 - IN THIS PART THE CODE MANAGE THE LAYERS' SELECTOR
## Add the layer selector which allows you to navigate the possibilities offered by this map
addLayersControl(baseGroups = c("1965",
"Empty layer"),
overlayGroups = c( "Venues",
"Cerchie",
"Heatmap",
"Performers",
"Jazz performers",
"Song performers",
"Classical performers",
"Opera performers",
"Theatre performers",
"Folk performers"),
options = layersControlOptions(collapsed = TRUE)) %>%
## Hide the layers that the users can choose as they like
hideGroup(c("Teatri",
"Night Club",
"Cinema",
"Dancing",
"Whisky a go-go",
"Heatmap",
"Jazz performers",
"Song performers",
"Classical performers",
"Opera performers",
"Theatre performers",
"Folk performers"
))
## Show the map
m
